apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.postgres.credentials.name }}
  namespace: {{ .Values.general.namespace }}
type: Opaque
stringData:
  postgres_username: {{ .Values.postgres.credentials.username }}
  postgres_password: {{ .Values.postgres.credentials.password }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.hiveMetastore.name }}
  namespace: {{ .Values.general.namespace }}
  labels:
    app: {{ .Values.hiveMetastore.name }}
spec:
  replicas: {{ .Values.hiveMetastore.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.hiveMetastore.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.hiveMetastore.name }}
    spec:
      containers:
      - name: {{ .Values.hiveMetastore.name }}
        image: {{ .Values.hiveMetastore.image }}
        ports:
          - containerPort: {{ .Values.hiveMetastore.port }}
        env:
          - name: HIVE_METASTORE_DRIVER
            value: org.postgresql.Driver
          - name: HIVE_METASTORE_JDBC_URL
            value: jdbc:postgresql://{{ .Values.hiveMetastore.jdbcURL.hostname }}.{{ .Values.hiveMetastore.jdbcURL.namespace }}.svc.cluster.local:{{ .Values.hiveMetastore.jdbcURL.port }}/{{ .Values.hiveMetastore.jdbcURL.dbName }}
          - name: HIVE_METASTORE_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.hiveMetastore.jdbcURL.credentials }}
                key: postgres_username
          - name: HIVE_METASTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.hiveMetastore.jdbcURL.credentials }}
                key: postgres_password
          - name: S3_ENDPOINT
            value: http://{{ .Values.hiveMetastore.s3URL.hostname }}.{{ .Values.hiveMetastore.s3URL.namespace }}.svc.cluster.local:{{ .Values.hiveMetastore.s3URL.port }}
          - name: S3_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.hiveMetastore.s3URL.credentials }}
                key: access-key
          - name: S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.hiveMetastore.s3URL.credentials }}
                key: secret-key
          - name: S3_PATH_STYLE_ACCESS
            value: "true"
          - name: REGION
            value: ""
          - name: GOOGLE_CLOUD_KEY_FILE_PATH
            value: ""
          - name: AZURE_ADL_CLIENT_ID
            value: ""
          - name: AZURE_ADL_CREDENTIAL
            value: ""
          - name: AZURE_ADL_REFRESH_URL
            value: ""
          - name: AZURE_ABFS_STORAGE_ACCOUNT
            value: ""
          - name: AZURE_ABFS_ACCESS_KEY
            value: ""
          - name: AZURE_WASB_STORAGE_ACCOUNT
            value: ""
          - name: AZURE_ABFS_OAUTH
            value: ""
          - name: AZURE_ABFS_OAUTH_TOKEN_PROVIDER
            value: ""
          - name: AZURE_ABFS_OAUTH_CLIENT_ID
            value: ""
          - name: AZURE_ABFS_OAUTH_SECRET
            value: ""
          - name: AZURE_ABFS_OAUTH_ENDPOINT
            value: ""
          - name: AZURE_WASB_ACCESS_KEY
            value: ""
      initContainers:
      - name: wait-for-postgres
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Values.hiveMetastore.jdbcURL.hostname }}.{{ .Values.hiveMetastore.jdbcURL.namespace }}.svc.cluster.local {{ .Values.hiveMetastore.jdbcURL.port }}; do echo waiting for postgres; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.hiveMetastore.name }}-svc"
  namespace: {{ .Values.general.namespace }}
spec:
  selector:
    app: {{ .Values.hiveMetastore.name }}
  ports:
  - port: {{ .Values.hiveMetastore.port }}
    targetPort: {{ .Values.hiveMetastore.port }}
  type: {{ .Values.hiveMetastore.svcType }} # Use NodePort if external access is needed