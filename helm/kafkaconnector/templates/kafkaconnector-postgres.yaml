apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: {{ .Values.kafkaConnectors.postgres.name }}
  namespace: {{ .Values.general.namespace }}
  labels:
    strimzi.io/cluster: {{ .Values.general.kafkaConnect.name }}
spec:
  class: io.debezium.connector.postgresql.PostgresConnector
  tasksMax: {{ .Values.kafkaConnectors.postgres.tasksMax }}
  config:
    database.hostname: "{{ .Values.kafkaConnectors.postgres.hostname }}.{{ .Values.general.namespace }}.svc.cluster.local"
    database.port: "{{ .Values.kafkaConnectors.postgres.port }}"
    database.dbname: "{{ .Values.kafkaConnectors.postgres.dbName }}"
    database.user: "${file:/opt/kafka/external-configuration/connector-config/postgres-credentials.properties:postgres_username}"
    database.password: "${file:/opt/kafka/external-configuration/connector-config/postgres-credentials.properties:postgres_password}"
    plugin.name: "pgoutput"
    key.converter: "org.apache.kafka.connect.json.JsonConverter"
    value.converter: "org.apache.kafka.connect.json.JsonConverter"
    key.converter.schemas.enable: "false"
    value.converter.schemas.enable: "false"
    slot.name: "{{ .Values.kafkaConnectors.postgres.slotName }}"
    table.include.list: "{{ .Values.general.metadataTable }},{{ .Values.general.reviewsTable }}"
    topic.prefix: "{{ .Values.kafkaConnectors.postgres.topicPrefix }}"
    tasks.max: "{{ .Values.kafkaConnectors.postgres.tasksMax }}"